// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_OOIDetectorTarget_2eproto__INCLUDED
#define PROTOBUF_OOIDetectorTarget_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>

namespace Magic {
namespace OOIDetector {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_OOIDetectorTarget_2eproto();
void protobuf_AssignDesc_OOIDetectorTarget_2eproto();
void protobuf_ShutdownFile_OOIDetectorTarget_2eproto();

class OOIDetectorTarget;
class OOIDetectorTarget_Point;
class OOIDetectorTarget_BBox;
class OOIDetectorTarget_MiddlePoint;
class OOIDetectorTarget_Blob;

// ===================================================================

class OOIDetectorTarget_Point : public ::google::protobuf::Message {
 public:
  OOIDetectorTarget_Point();
  virtual ~OOIDetectorTarget_Point();
  
  OOIDetectorTarget_Point(const OOIDetectorTarget_Point& from);
  
  inline OOIDetectorTarget_Point& operator=(const OOIDetectorTarget_Point& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const OOIDetectorTarget_Point& default_instance();
  void Swap(OOIDetectorTarget_Point* other);
  
  // implements Message ----------------------------------------------
  
  OOIDetectorTarget_Point* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OOIDetectorTarget_Point& from);
  void MergeFrom(const OOIDetectorTarget_Point& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required double u = 1;
  inline bool has_u() const;
  inline void clear_u();
  static const int kUFieldNumber = 1;
  inline double u() const;
  inline void set_u(double value);
  
  // required double v = 2;
  inline bool has_v() const;
  inline void clear_v();
  static const int kVFieldNumber = 2;
  inline double v() const;
  inline void set_v(double value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  double u_;
  double v_;
  friend void  protobuf_AddDesc_OOIDetectorTarget_2eproto();
  friend void protobuf_AssignDesc_OOIDetectorTarget_2eproto();
  friend void protobuf_ShutdownFile_OOIDetectorTarget_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static OOIDetectorTarget_Point* default_instance_;
};
// -------------------------------------------------------------------

class OOIDetectorTarget_BBox : public ::google::protobuf::Message {
 public:
  OOIDetectorTarget_BBox();
  virtual ~OOIDetectorTarget_BBox();
  
  OOIDetectorTarget_BBox(const OOIDetectorTarget_BBox& from);
  
  inline OOIDetectorTarget_BBox& operator=(const OOIDetectorTarget_BBox& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const OOIDetectorTarget_BBox& default_instance();
  void Swap(OOIDetectorTarget_BBox* other);
  
  // implements Message ----------------------------------------------
  
  OOIDetectorTarget_BBox* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OOIDetectorTarget_BBox& from);
  void MergeFrom(const OOIDetectorTarget_BBox& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 tlx = 1;
  inline bool has_tlx() const;
  inline void clear_tlx();
  static const int kTlxFieldNumber = 1;
  inline ::google::protobuf::int32 tlx() const;
  inline void set_tlx(::google::protobuf::int32 value);
  
  // required int32 tly = 2;
  inline bool has_tly() const;
  inline void clear_tly();
  static const int kTlyFieldNumber = 2;
  inline ::google::protobuf::int32 tly() const;
  inline void set_tly(::google::protobuf::int32 value);
  
  // required int32 brx = 3;
  inline bool has_brx() const;
  inline void clear_brx();
  static const int kBrxFieldNumber = 3;
  inline ::google::protobuf::int32 brx() const;
  inline void set_brx(::google::protobuf::int32 value);
  
  // required int32 bry = 4;
  inline bool has_bry() const;
  inline void clear_bry();
  static const int kBryFieldNumber = 4;
  inline ::google::protobuf::int32 bry() const;
  inline void set_bry(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 tlx_;
  ::google::protobuf::int32 tly_;
  ::google::protobuf::int32 brx_;
  ::google::protobuf::int32 bry_;
  friend void  protobuf_AddDesc_OOIDetectorTarget_2eproto();
  friend void protobuf_AssignDesc_OOIDetectorTarget_2eproto();
  friend void protobuf_ShutdownFile_OOIDetectorTarget_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static OOIDetectorTarget_BBox* default_instance_;
};
// -------------------------------------------------------------------

class OOIDetectorTarget_MiddlePoint : public ::google::protobuf::Message {
 public:
  OOIDetectorTarget_MiddlePoint();
  virtual ~OOIDetectorTarget_MiddlePoint();
  
  OOIDetectorTarget_MiddlePoint(const OOIDetectorTarget_MiddlePoint& from);
  
  inline OOIDetectorTarget_MiddlePoint& operator=(const OOIDetectorTarget_MiddlePoint& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const OOIDetectorTarget_MiddlePoint& default_instance();
  void Swap(OOIDetectorTarget_MiddlePoint* other);
  
  // implements Message ----------------------------------------------
  
  OOIDetectorTarget_MiddlePoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OOIDetectorTarget_MiddlePoint& from);
  void MergeFrom(const OOIDetectorTarget_MiddlePoint& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 R = 1;
  inline bool has_r() const;
  inline void clear_r();
  static const int kRFieldNumber = 1;
  inline ::google::protobuf::int32 r() const;
  inline void set_r(::google::protobuf::int32 value);
  
  // required int32 uPix = 2;
  inline bool has_upix() const;
  inline void clear_upix();
  static const int kUPixFieldNumber = 2;
  inline ::google::protobuf::int32 upix() const;
  inline void set_upix(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 r_;
  ::google::protobuf::int32 upix_;
  friend void  protobuf_AddDesc_OOIDetectorTarget_2eproto();
  friend void protobuf_AssignDesc_OOIDetectorTarget_2eproto();
  friend void protobuf_ShutdownFile_OOIDetectorTarget_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static OOIDetectorTarget_MiddlePoint* default_instance_;
};
// -------------------------------------------------------------------

class OOIDetectorTarget_Blob : public ::google::protobuf::Message {
 public:
  OOIDetectorTarget_Blob();
  virtual ~OOIDetectorTarget_Blob();
  
  OOIDetectorTarget_Blob(const OOIDetectorTarget_Blob& from);
  
  inline OOIDetectorTarget_Blob& operator=(const OOIDetectorTarget_Blob& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const OOIDetectorTarget_Blob& default_instance();
  void Swap(OOIDetectorTarget_Blob* other);
  
  // implements Message ----------------------------------------------
  
  OOIDetectorTarget_Blob* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OOIDetectorTarget_Blob& from);
  void MergeFrom(const OOIDetectorTarget_Blob& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .Magic.OOIDetector.OOIDetectorTarget.Point center = 1;
  inline bool has_center() const;
  inline void clear_center();
  static const int kCenterFieldNumber = 1;
  inline const ::Magic::OOIDetector::OOIDetectorTarget_Point& center() const;
  inline ::Magic::OOIDetector::OOIDetectorTarget_Point* mutable_center();
  
  // required .Magic.OOIDetector.OOIDetectorTarget.BBox bound = 2;
  inline bool has_bound() const;
  inline void clear_bound();
  static const int kBoundFieldNumber = 2;
  inline const ::Magic::OOIDetector::OOIDetectorTarget_BBox& bound() const;
  inline ::Magic::OOIDetector::OOIDetectorTarget_BBox* mutable_bound();
  
  // optional string ooitype = 3;
  inline bool has_ooitype() const;
  inline void clear_ooitype();
  static const int kOoitypeFieldNumber = 3;
  inline const ::std::string& ooitype() const;
  inline void set_ooitype(const ::std::string& value);
  inline void set_ooitype(const char* value);
  inline void set_ooitype(const char* value, size_t size);
  inline ::std::string* mutable_ooitype();
  
  // repeated .Magic.OOIDetector.OOIDetectorTarget.MiddlePoint middlePoints = 4;
  inline int middlepoints_size() const;
  inline void clear_middlepoints();
  static const int kMiddlePointsFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::Magic::OOIDetector::OOIDetectorTarget_MiddlePoint >& middlepoints() const;
  inline ::google::protobuf::RepeatedPtrField< ::Magic::OOIDetector::OOIDetectorTarget_MiddlePoint >* mutable_middlepoints();
  inline const ::Magic::OOIDetector::OOIDetectorTarget_MiddlePoint& middlepoints(int index) const;
  inline ::Magic::OOIDetector::OOIDetectorTarget_MiddlePoint* mutable_middlepoints(int index);
  inline ::Magic::OOIDetector::OOIDetectorTarget_MiddlePoint* add_middlepoints();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::Magic::OOIDetector::OOIDetectorTarget_Point* center_;
  ::Magic::OOIDetector::OOIDetectorTarget_BBox* bound_;
  ::std::string* ooitype_;
  static const ::std::string _default_ooitype_;
  ::google::protobuf::RepeatedPtrField< ::Magic::OOIDetector::OOIDetectorTarget_MiddlePoint > middlepoints_;
  friend void  protobuf_AddDesc_OOIDetectorTarget_2eproto();
  friend void protobuf_AssignDesc_OOIDetectorTarget_2eproto();
  friend void protobuf_ShutdownFile_OOIDetectorTarget_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static OOIDetectorTarget_Blob* default_instance_;
};
// -------------------------------------------------------------------

class OOIDetectorTarget : public ::google::protobuf::Message {
 public:
  OOIDetectorTarget();
  virtual ~OOIDetectorTarget();
  
  OOIDetectorTarget(const OOIDetectorTarget& from);
  
  inline OOIDetectorTarget& operator=(const OOIDetectorTarget& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const OOIDetectorTarget& default_instance();
  void Swap(OOIDetectorTarget* other);
  
  // implements Message ----------------------------------------------
  
  OOIDetectorTarget* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OOIDetectorTarget& from);
  void MergeFrom(const OOIDetectorTarget& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef OOIDetectorTarget_Point Point;
  typedef OOIDetectorTarget_BBox BBox;
  typedef OOIDetectorTarget_MiddlePoint MiddlePoint;
  typedef OOIDetectorTarget_Blob Blob;
  
  // accessors -------------------------------------------------------
  
  // repeated .Magic.OOIDetector.OOIDetectorTarget.Blob oois = 1;
  inline int oois_size() const;
  inline void clear_oois();
  static const int kOoisFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::Magic::OOIDetector::OOIDetectorTarget_Blob >& oois() const;
  inline ::google::protobuf::RepeatedPtrField< ::Magic::OOIDetector::OOIDetectorTarget_Blob >* mutable_oois();
  inline const ::Magic::OOIDetector::OOIDetectorTarget_Blob& oois(int index) const;
  inline ::Magic::OOIDetector::OOIDetectorTarget_Blob* mutable_oois(int index);
  inline ::Magic::OOIDetector::OOIDetectorTarget_Blob* add_oois();
  
  // required double timeStamp = 2;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimeStampFieldNumber = 2;
  inline double timestamp() const;
  inline void set_timestamp(double value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::Magic::OOIDetector::OOIDetectorTarget_Blob > oois_;
  double timestamp_;
  friend void  protobuf_AddDesc_OOIDetectorTarget_2eproto();
  friend void protobuf_AssignDesc_OOIDetectorTarget_2eproto();
  friend void protobuf_ShutdownFile_OOIDetectorTarget_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static OOIDetectorTarget* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// OOIDetectorTarget_Point

// required double u = 1;
inline bool OOIDetectorTarget_Point::has_u() const {
  return _has_bit(0);
}
inline void OOIDetectorTarget_Point::clear_u() {
  u_ = 0;
  _clear_bit(0);
}
inline double OOIDetectorTarget_Point::u() const {
  return u_;
}
inline void OOIDetectorTarget_Point::set_u(double value) {
  _set_bit(0);
  u_ = value;
}

// required double v = 2;
inline bool OOIDetectorTarget_Point::has_v() const {
  return _has_bit(1);
}
inline void OOIDetectorTarget_Point::clear_v() {
  v_ = 0;
  _clear_bit(1);
}
inline double OOIDetectorTarget_Point::v() const {
  return v_;
}
inline void OOIDetectorTarget_Point::set_v(double value) {
  _set_bit(1);
  v_ = value;
}

// -------------------------------------------------------------------

// OOIDetectorTarget_BBox

// required int32 tlx = 1;
inline bool OOIDetectorTarget_BBox::has_tlx() const {
  return _has_bit(0);
}
inline void OOIDetectorTarget_BBox::clear_tlx() {
  tlx_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 OOIDetectorTarget_BBox::tlx() const {
  return tlx_;
}
inline void OOIDetectorTarget_BBox::set_tlx(::google::protobuf::int32 value) {
  _set_bit(0);
  tlx_ = value;
}

// required int32 tly = 2;
inline bool OOIDetectorTarget_BBox::has_tly() const {
  return _has_bit(1);
}
inline void OOIDetectorTarget_BBox::clear_tly() {
  tly_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 OOIDetectorTarget_BBox::tly() const {
  return tly_;
}
inline void OOIDetectorTarget_BBox::set_tly(::google::protobuf::int32 value) {
  _set_bit(1);
  tly_ = value;
}

// required int32 brx = 3;
inline bool OOIDetectorTarget_BBox::has_brx() const {
  return _has_bit(2);
}
inline void OOIDetectorTarget_BBox::clear_brx() {
  brx_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 OOIDetectorTarget_BBox::brx() const {
  return brx_;
}
inline void OOIDetectorTarget_BBox::set_brx(::google::protobuf::int32 value) {
  _set_bit(2);
  brx_ = value;
}

// required int32 bry = 4;
inline bool OOIDetectorTarget_BBox::has_bry() const {
  return _has_bit(3);
}
inline void OOIDetectorTarget_BBox::clear_bry() {
  bry_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 OOIDetectorTarget_BBox::bry() const {
  return bry_;
}
inline void OOIDetectorTarget_BBox::set_bry(::google::protobuf::int32 value) {
  _set_bit(3);
  bry_ = value;
}

// -------------------------------------------------------------------

// OOIDetectorTarget_MiddlePoint

// required int32 R = 1;
inline bool OOIDetectorTarget_MiddlePoint::has_r() const {
  return _has_bit(0);
}
inline void OOIDetectorTarget_MiddlePoint::clear_r() {
  r_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 OOIDetectorTarget_MiddlePoint::r() const {
  return r_;
}
inline void OOIDetectorTarget_MiddlePoint::set_r(::google::protobuf::int32 value) {
  _set_bit(0);
  r_ = value;
}

// required int32 uPix = 2;
inline bool OOIDetectorTarget_MiddlePoint::has_upix() const {
  return _has_bit(1);
}
inline void OOIDetectorTarget_MiddlePoint::clear_upix() {
  upix_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 OOIDetectorTarget_MiddlePoint::upix() const {
  return upix_;
}
inline void OOIDetectorTarget_MiddlePoint::set_upix(::google::protobuf::int32 value) {
  _set_bit(1);
  upix_ = value;
}

// -------------------------------------------------------------------

// OOIDetectorTarget_Blob

// required .Magic.OOIDetector.OOIDetectorTarget.Point center = 1;
inline bool OOIDetectorTarget_Blob::has_center() const {
  return _has_bit(0);
}
inline void OOIDetectorTarget_Blob::clear_center() {
  if (center_ != NULL) center_->::Magic::OOIDetector::OOIDetectorTarget_Point::Clear();
  _clear_bit(0);
}
inline const ::Magic::OOIDetector::OOIDetectorTarget_Point& OOIDetectorTarget_Blob::center() const {
  return center_ != NULL ? *center_ : *default_instance_->center_;
}
inline ::Magic::OOIDetector::OOIDetectorTarget_Point* OOIDetectorTarget_Blob::mutable_center() {
  _set_bit(0);
  if (center_ == NULL) center_ = new ::Magic::OOIDetector::OOIDetectorTarget_Point;
  return center_;
}

// required .Magic.OOIDetector.OOIDetectorTarget.BBox bound = 2;
inline bool OOIDetectorTarget_Blob::has_bound() const {
  return _has_bit(1);
}
inline void OOIDetectorTarget_Blob::clear_bound() {
  if (bound_ != NULL) bound_->::Magic::OOIDetector::OOIDetectorTarget_BBox::Clear();
  _clear_bit(1);
}
inline const ::Magic::OOIDetector::OOIDetectorTarget_BBox& OOIDetectorTarget_Blob::bound() const {
  return bound_ != NULL ? *bound_ : *default_instance_->bound_;
}
inline ::Magic::OOIDetector::OOIDetectorTarget_BBox* OOIDetectorTarget_Blob::mutable_bound() {
  _set_bit(1);
  if (bound_ == NULL) bound_ = new ::Magic::OOIDetector::OOIDetectorTarget_BBox;
  return bound_;
}

// optional string ooitype = 3;
inline bool OOIDetectorTarget_Blob::has_ooitype() const {
  return _has_bit(2);
}
inline void OOIDetectorTarget_Blob::clear_ooitype() {
  if (ooitype_ != &_default_ooitype_) {
    ooitype_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& OOIDetectorTarget_Blob::ooitype() const {
  return *ooitype_;
}
inline void OOIDetectorTarget_Blob::set_ooitype(const ::std::string& value) {
  _set_bit(2);
  if (ooitype_ == &_default_ooitype_) {
    ooitype_ = new ::std::string;
  }
  ooitype_->assign(value);
}
inline void OOIDetectorTarget_Blob::set_ooitype(const char* value) {
  _set_bit(2);
  if (ooitype_ == &_default_ooitype_) {
    ooitype_ = new ::std::string;
  }
  ooitype_->assign(value);
}
inline void OOIDetectorTarget_Blob::set_ooitype(const char* value, size_t size) {
  _set_bit(2);
  if (ooitype_ == &_default_ooitype_) {
    ooitype_ = new ::std::string;
  }
  ooitype_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OOIDetectorTarget_Blob::mutable_ooitype() {
  _set_bit(2);
  if (ooitype_ == &_default_ooitype_) {
    ooitype_ = new ::std::string;
  }
  return ooitype_;
}

// repeated .Magic.OOIDetector.OOIDetectorTarget.MiddlePoint middlePoints = 4;
inline int OOIDetectorTarget_Blob::middlepoints_size() const {
  return middlepoints_.size();
}
inline void OOIDetectorTarget_Blob::clear_middlepoints() {
  middlepoints_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Magic::OOIDetector::OOIDetectorTarget_MiddlePoint >&
OOIDetectorTarget_Blob::middlepoints() const {
  return middlepoints_;
}
inline ::google::protobuf::RepeatedPtrField< ::Magic::OOIDetector::OOIDetectorTarget_MiddlePoint >*
OOIDetectorTarget_Blob::mutable_middlepoints() {
  return &middlepoints_;
}
inline const ::Magic::OOIDetector::OOIDetectorTarget_MiddlePoint& OOIDetectorTarget_Blob::middlepoints(int index) const {
  return middlepoints_.Get(index);
}
inline ::Magic::OOIDetector::OOIDetectorTarget_MiddlePoint* OOIDetectorTarget_Blob::mutable_middlepoints(int index) {
  return middlepoints_.Mutable(index);
}
inline ::Magic::OOIDetector::OOIDetectorTarget_MiddlePoint* OOIDetectorTarget_Blob::add_middlepoints() {
  return middlepoints_.Add();
}

// -------------------------------------------------------------------

// OOIDetectorTarget

// repeated .Magic.OOIDetector.OOIDetectorTarget.Blob oois = 1;
inline int OOIDetectorTarget::oois_size() const {
  return oois_.size();
}
inline void OOIDetectorTarget::clear_oois() {
  oois_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::Magic::OOIDetector::OOIDetectorTarget_Blob >&
OOIDetectorTarget::oois() const {
  return oois_;
}
inline ::google::protobuf::RepeatedPtrField< ::Magic::OOIDetector::OOIDetectorTarget_Blob >*
OOIDetectorTarget::mutable_oois() {
  return &oois_;
}
inline const ::Magic::OOIDetector::OOIDetectorTarget_Blob& OOIDetectorTarget::oois(int index) const {
  return oois_.Get(index);
}
inline ::Magic::OOIDetector::OOIDetectorTarget_Blob* OOIDetectorTarget::mutable_oois(int index) {
  return oois_.Mutable(index);
}
inline ::Magic::OOIDetector::OOIDetectorTarget_Blob* OOIDetectorTarget::add_oois() {
  return oois_.Add();
}

// required double timeStamp = 2;
inline bool OOIDetectorTarget::has_timestamp() const {
  return _has_bit(1);
}
inline void OOIDetectorTarget::clear_timestamp() {
  timestamp_ = 0;
  _clear_bit(1);
}
inline double OOIDetectorTarget::timestamp() const {
  return timestamp_;
}
inline void OOIDetectorTarget::set_timestamp(double value) {
  _set_bit(1);
  timestamp_ = value;
}


}  // namespace OOIDetector
}  // namespace Magic

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_OOIDetectorTarget_2eproto__INCLUDED
